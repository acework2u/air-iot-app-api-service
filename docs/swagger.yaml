basePath: /api/v1
definitions:
  auth.ResendConfirmCode:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  auth.SignInRequest:
    properties:
      device_no:
        description: |-
          DeviceNo
          A device no of user authentication
          in:body
          Type: String
          Required: Yes
        type: string
      password:
        description: |-
          Password
          A Password of user authentication
          in:body
          Type: String
          Required: Yes
        type: string
      username:
        description: |-
          Username
          A Username of user authentication
          in:body
          Type: String
          Required: Yes
        type: string
    required:
    - device_no
    - password
    - username
    type: object
  auth.SignUpRequest:
    properties:
      customRole:
        description: |-
          customRole
          Role of access to our resource
          in:body
          Type: String
          Required: No (option)
          example: 1 is role default
        type: string
      lastName:
        description: |-
          Last name of user
          in:body
          Type: String
          Required: Yes
          example: dechpala
        maxLength: 100
        minLength: 2
        type: string
      name:
        description: |-
          The name of user
          A unique identifier for new user
          in:body
          Type: String
          Required: Yes
          example: anon
        maxLength: 20
        minLength: 2
        type: string
      password:
        description: |-
          Password of user authentication
          in:body
          Type: String
          Required: Yes
          example: P@assWord1234
        type: string
      phone_no:
        description: |-
          The mobile number of user
          in:body
          Type: String
          Required: Yes
          example: 0941234567 for Thailand
        type: string
      username:
        description: |-
          Username is Email of user authentication
          in:body
          Type: String
          Required: Yes
          example: my-email@mail.com
        type: string
    required:
    - lastName
    - name
    - password
    - phone_no
    - username
    type: object
  auth.UserConfirm:
    properties:
      confirmationCode:
        description: |-
          ConfirmationCode
          A code of user confirmation
          in:body
          Type: String
          Required: Yes
        type: string
      username:
        description: |-
          Username
          A Username of confirmation
          in:body
          Type: String
          Required: Yes
        type: string
    required:
    - confirmationCode
    - username
    type: object
  auth.UserConfirmNewPassword:
    properties:
      confirmCode:
        description: |-
          ConfirmCode
          Confirm code sent the confirmation to the client.
          in:body
          Type: String
          Required: Yes
        type: string
      password:
        description: |-
          Password
          A password of confirm new password
          in:body
          Type: String
          Required: Yes
        maxLength: 10
        minLength: 1
        type: string
      userName:
        description: |-
          UserName
          A username of confirm new password
          in:body
          Type: String
          Required: Yes
        type: string
    required:
    - confirmCode
    - password
    - userName
    type: object
  handler.airCmdReq:
    properties:
      cmd:
        type: string
      serialNo:
        type: string
      value:
        type: string
    required:
    - cmd
    - serialNo
    - value
    type: object
  services.AirCmd:
    properties:
      cmd:
        type: string
      value:
        type: string
    type: object
  services.AirInfo:
    properties:
      bg:
        type: string
      registerDate:
        type: string
      serial:
        type: string
      status:
        type: boolean
      title:
        type: string
      updatedDate:
        type: string
      userId:
        type: string
    required:
    - serial
    - title
    type: object
  services.AirWidget:
    properties:
      energy:
        type: boolean
      engineer:
        type: boolean
      ewarranty:
        default: true
        type: boolean
      fanSpeed:
        default: true
        type: boolean
      filter:
        type: boolean
      mode:
        default: true
        type: boolean
      schedule:
        type: boolean
      sleep:
        type: boolean
      swing:
        default: true
        type: boolean
      ultrafineParticle:
        type: boolean
    type: object
  services.CustomerAddress:
    properties:
      address:
        type: string
      address_default:
        type: boolean
      amphur:
        type: string
      customerId:
        type: string
      district:
        type: string
      lastName:
        type: string
      name:
        type: string
      province:
        type: string
      tax:
        type: string
      tax_default:
        type: boolean
      tax_used:
        type: boolean
      tel:
        type: string
      updatedAt:
        type: string
      zipcode:
        type: integer
    required:
    - address
    - amphur
    - district
    - lastName
    - name
    - province
    - tel
    - zipcode
    type: object
  services.Device:
    properties:
      model:
        type: string
      name:
        type: string
      serialNo:
        type: string
      title:
        type: string
      userId:
        type: string
      warranty:
        type: string
    required:
    - model
    - name
    - serialNo
    - title
    - warranty
    type: object
  services.JobScheduleReq:
    properties:
      command:
        items:
          $ref: '#/definitions/services.AirCmd'
        type: array
      createdDate:
        type: string
      duration:
        items:
          type: string
        type: array
      endDate:
        type: string
      jobId:
        type: integer
      mode:
        type: string
      serialNo:
        type: string
      startDate:
        type: string
      status:
        type: boolean
      updatedDate:
        type: string
      userId:
        type: string
    type: object
  services.ReqUpdateDevice:
    properties:
      model:
        type: string
      name:
        type: string
      serialNo:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
      warranty:
        type: string
    required:
    - model
    - name
    - serialNo
    - title
    - warranty
    type: object
  services.UpdateAirInfo:
    properties:
      bg:
        type: string
      serial:
        type: string
      title:
        type: string
      updatedDate:
        type: string
      userId:
        type: string
      widgets:
        $ref: '#/definitions/services.AirWidget'
    required:
    - serial
    - title
    - userId
    type: object
  services.UpdateInfoRequest:
    properties:
      lastname:
        type: string
      mobile:
        type: string
      name:
        type: string
      updateAt:
        type: string
    required:
    - lastname
    - mobile
    - name
    type: object
  utils.ApiResponse:
    properties:
      message: {}
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Air Smart IoT App API Service
  title: Air IoT API Service 2023
  version: 1.0.0
paths:
  /air/{id}:
    put:
      description: Update Air Information
      parameters:
      - description: Acccount ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update air infomation
        in: body
        name: AirInfo
        required: true
        schema:
          $ref: '#/definitions/services.UpdateAirInfo'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Update Air Information
      tags:
      - AirThings
  /airs:
    get:
      description: Get Air list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get Air list
      tags:
      - AirThings
    post:
      description: add a new air things
      parameters:
      - description: Air information
        in: body
        name: AirInfo
        required: true
        schema:
          $ref: '#/definitions/services.AirInfo'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: add a new air things
      tags:
      - AirThings
  /airs/{id}:
    delete:
      description: Delete Air by Id
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Delete Air by Id
      tags:
      - AirThings
  /auth/confirm:
    post:
      description: New user confirm a sign up
      parameters:
      - description: New User confirm information
        in: body
        name: SignUp
        required: true
        schema:
          $ref: '#/definitions/auth.UserConfirm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      summary: User confirm is sign up
      tags:
      - Authentication
  /auth/confirm-password:
    post:
      description: refresh new user token
      parameters:
      - description: response confirm new password
        in: body
        name: ConfirmNewPassword
        required: true
        schema:
          $ref: '#/definitions/auth.UserConfirmNewPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      summary: Refresh user token
      tags:
      - Authentication
  /auth/forgot-password:
    post:
      description: refresh new user token
      parameters:
      - description: response confirm code
        in: body
        name: resendConfirmCode
        required: true
        schema:
          $ref: '#/definitions/auth.ResendConfirmCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      summary: Refresh user token
      tags:
      - Authentication
  /auth/refresh-token:
    post:
      description: refresh new user token
      parameters:
      - description: refresh a token string
        in: body
        name: refresh_token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Refresh user token
      tags:
      - Authentication
  /auth/resend-confirm-code:
    post:
      description: retern Resend confirmation code for a new user
      parameters:
      - description: Resend confirm code
        in: body
        name: ResendConfirmCode
        required: true
        schema:
          $ref: '#/definitions/auth.ResendConfirmCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      summary: Resend confirm code for a new user
      tags:
      - Authentication
  /auth/signin:
    post:
      description: Authenticates a user and provides authorize API Calls
      operationId: Authentication
      parameters:
      - description: 'User and Password '
        in: body
        name: SignIn
        required: true
        schema:
          $ref: '#/definitions/auth.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      summary: User signin
      tags:
      - Authentication
  /auth/signup:
    post:
      description: User SignUp for use a Air IoT resource
      parameters:
      - description: New User information
        in: body
        name: SignUp
        required: true
        schema:
          $ref: '#/definitions/auth.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      summary: User Sign Up
      tags:
      - Authentication
  /devices:
    get:
      description: Get device list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get Device list
      tags:
      - ThingsDevice
    post:
      description: user is a new things device
      parameters:
      - description: a device information
        in: body
        name: DeviceInfo
        required: true
        schema:
          $ref: '#/definitions/services.Device'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: New a Things Device
      tags:
      - ThingsDevice
  /devices/:id:
    delete:
      description: Delete a things device
      parameters:
      - description: Device id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Delete a things device
      tags:
      - ThingsDevice
    put:
      description: Update my things device
      parameters:
      - description: Update things device
        in: body
        name: DeviceInfo
        required: true
        schema:
          $ref: '#/definitions/services.ReqUpdateDevice'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Update my things device
      tags:
      - ThingsDevice
  /my:
    get:
      description: Return User Information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get User info
      tags:
      - Users
  /my/{id}:
    delete:
      description: Delete user by id
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Delete user by id
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: get user information by id
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: get user information by id
      tags:
      - Users
  /my/address:
    post:
      description: PostNewAddress user by id
      parameters:
      - description: Customer Address
        in: body
        name: CustomerAddress
        required: true
        schema:
          $ref: '#/definitions/services.CustomerAddress'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: PostNewAddress user by id
      tags:
      - Users
  /my/address/:id:
    put:
      description: Update
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Address information
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/services.CustomerAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      summary: Update user address
      tags:
      - Users
  /my/info:
    post:
      description: post method user information update
      parameters:
      - description: User information
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/services.UpdateInfoRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: update user information
      tags:
      - Users
  /schedule:
    get:
      description: get a schedule job air things
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: get a schedule job air things
      tags:
      - AirScheduleJobs
    post:
      description: add a new job for Schedule
      parameters:
      - description: air scheule job
        in: body
        name: jobScheduleReq
        required: true
        schema:
          $ref: '#/definitions/services.JobScheduleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: add a new job for Schedule
      tags:
      - AirScheduleJobs
  /thing/shadows:
    post:
      description: Air things shadows command
      parameters:
      - description: Air cmd request
        in: body
        name: AirCommandReq
        required: true
        schema:
          $ref: '#/definitions/handler.airCmdReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ApiResponse'
      security:
      - BearerAuth: []
      summary: Air things shadows command
      tags:
      - AirThingsCommand
schemes:
- https
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
