version: '3.8'

services:
  app:
    container_name: air-apis
    image: air-apis
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - ~/.aws/:/root/.aws:ro
    links:
      - database2
    depends_on:
      - database
      - database2
    ports:
      - 8080:8080
    networks:
      - go-ci-cd-net
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGURI}
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "localhost:127.0.0.1"
  database:
    container_name: postgres-db
    image: postgres
    restart: always
    hostname: db 
    networks:
      - go-ci-cd-net 
    env_file:
      - .env 
    ports: 
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
  database2:
    container_name: mongo-db
    image: mongo:latest
    hostname: mongo
    restart: always
    environment:
       MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
       MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
       MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
       MONGODB_DB: ${MONGODB_DB}
       MONGODB_USER: ${MONGODB_USER}
       MONGODB_PASSWORD: ${MONGODB_PASSWORD}
#       MONGO_INITDB_ROOT_USERNAME: airsadmin
#       MONGO_INITDB_ROOT_PASSWORD: wPx7g4BvWrJd2022
    env_file:
      - .env
    ports:
      - ${MONGODB_PORT}:27017
    networks:
      - go-ci-cd-net
    volumes:
#      - ./mongo-init.sh:/docker-entrypoint-initdb.d/init.sh:ro
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh:ro
      - mongodb_data_smartapp:/data/db
#  kafka:
#    image: docker.io/bitnami/kafka:3.3
#    ports:
#      - "9093:9093"
#    volumes:
#      - "kafka-volume:/bitnami"
#    environment:
#      - KAFKA_BROKER_ID = 1
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=

volumes:
  db-data:
  mongodb_data_smartapp:
               
networks:
  go-ci-cd-net:
    driver: bridge
